from Epaisseur import *
from scipy.interpolate import make_interp_spline

#Evolution de l'épaisseur de la ZMT pour chaque tir
# X est une liste de liste qui contient la valeur l'épaisseur de la ZMT pour chaque image et chaque tir
# X[0] correspond à l'évolution de l'épaisseur de la ZMT pour le tir "image_shot2"
#Ici, on exploite 90% de la largeur de la ZMT

X = [[0.015415886524822696, 0.015479769784172663, 0.015777284671532846, 0.016048770370370374, 0.016272230215827337, 0.01644094117647059, 0.016540143884892087, 0.016684321167883213, 0.01685882014388489, 0.01716023880597015, 0.017207044776119403, 0.01734023529411765, 0.017375826086956522, 0.017526755555555554, 0.01774586861313869, 0.01790324087591241, 0.018137538461538462, 0.018443741007194245, 0.017521553956834534, 0.01707293203883495, 0.019141433962264153, 0.019992, 0.02053412765957447, 0.021140198581560285, 0.021534978723404256, 0.021960340425531914, 0.022143829787234042, 0.02257243165467626, 0.02290238848920863, 0.023066836879432628, 0.02338933333333333, 0.023581163120567374, 0.023917560283687942, 0.024110882352941176, 0.024515737226277375, 0.02485164705882353, 0.02517097810218978, 0.025365547445255477, 0.025613636363636363, 0.025857038167938932]]
X.append([0.01548240650406504, 0.01615225196850394, 0.016012152671755722, 0.016170771653543307, 0.016244028776978416, 0.01650202985074627, 0.01672242962962963, 0.01685031884057971, 0.017078791366906477, 0.01727375182481752, 0.017336964539007092, 0.01736754609929078, 0.017512113475177307, 0.017648340425531917, 0.01787909219858156, 0.018093163120567374, 0.018212489208633095, 0.018612949640287774, 0.017651445255474456, 0.016751, 0.019012, 0.01963336170212766, 0.02007540425531915, 0.02042630215827338, 0.020803801418439717, 0.021070695035460996, 0.021551659574468085, 0.021712287769784174, 0.022160690647482016, 0.022438524822695035, 0.022722099290780142, 0.02299455319148936, 0.02317804255319149, 0.023608700729927008, 0.02403326618705036, 0.02429843971631206, 0.024619856115107915, 0.025082149253731346, 0.02531282352941177, 0.02564260740740741]
)
X.append([0.016678070921985817, 0.01695175572519084, 0.017041985401459854, 0.01711455319148936, 0.017259120567375885, 0.017353645390070924, 0.017531574468085107, 0.01769560283687943, 0.017894656934306568, 0.018079942446043166, 0.018355328467153285, 0.018468482269503546, 0.018685333333333335, 0.01885008695652174, 0.019023701492537314, 0.018957007194244604, 0.0193942695035461, 0.018229390070921985, 0.017500992907801417, 0.020636, 0.020780722891566267, 0.02167398581560284, 0.022171971223021586, 0.02251567883211679, 0.02289909489051095, 0.023237985611510793, 0.023330950354609928, 0.02365254676258993, 0.02412351079136691, 0.02447038848920863, 0.025037957446808513, 0.025448294117647062, 0.026031157894736846, 0.026205617021276596, 0.02664169343065693, 0.027074526315789472, 0.02747015384615385, 0.02790848780487805, 0.028082622950819675, 0.028103384615384613]
)
X.append([0.01582946762589928, 0.015946893617021275, 0.01613968345323741, 0.016247148936170214, 0.01646682014388489, 0.016433418439716314, 0.016616287769784174, 0.01687856115107914, 0.017208517985611512, 0.017472823529411766, 0.01785329411764706, 0.01809829411764706, 0.018398058823529413, 0.018630315789473686, 0.01872888888888889, 0.018998736842105263, 0.01971547286821705, 0.018709894736842106, 0.017858105263157894, 0.02097953846153846, 0.021065333333333335, 0.022026809160305343, 0.022394176, 0.022943529411764706, 0.023407050847457627, 0.023975, 0.024397811965811967, 0.024514823529411763, 0.025235803278688525, 0.025938926829268294, 0.026303482014388493, 0.026596776978417263, 0.027065294117647062, 0.027478315789473687, 0.028054328358208955, 0.028023511450381677, 0.02837676470588235, 0.028864656716417917, 0.029196949640287767, 0.029485473684210527]
)
X.append([0.015755496296296294, 0.015938553191489364, 0.016194326241134753, 0.016269390070921985, 0.01651682269503546, 0.016753134751773046, 0.017061730496453903, 0.01733140425531915, 0.017667801418439714, 0.017951375886524824, 0.018262751773049646, 0.018590388489208635, 0.018863262411347517, 0.019023529411764706, 0.01931623880597015, 0.01951223880597015, 0.019622241134751774, 0.018735883211678832, 0.018156985507246377, 0.019936528301886795, 0.020467728155339805, 0.021607262411347517, 0.022027063829787235, 0.02251358865248227, 0.022863886524822696, 0.02319568345323741, 0.02352, 0.02411571653543307, 0.024458823529411765, 0.0247996694214876, 0.025231165217391303, 0.025346146341463413, 0.025583157894736842, 0.025885754385964913, 0.026303503875968994, 0.026469046153846154, 0.026739786259541987, 0.027170098360655738, 0.027071578947368426, 0.027291419354838715]
)
X.append([0.016198906474820144, 0.016383375886524824, 0.016661410071942447, 0.01680241726618705, 0.016970452554744525, 0.01714289855072464, 0.017445430656934307, 0.017648711111111114, 0.017918755555555554, 0.01814814814814815, 0.018412470588235294, 0.01859531851851852, 0.018916882352941176, 0.01923703703703704, 0.019430727272727273, 0.019513529411764707, 0.020482725925925926, 0.019483234042553192, 0.018615829787234042, 0.0209524, 0.021665538461538462, 0.02254890909090909, 0.023235725190839697, 0.023763842519685042, 0.024008444444444447, 0.024572058823529412, 0.024768470588235295, 0.02542060606060606, 0.02567137007874016, 0.02623706870229008, 0.026451352941176478, 0.02693153623188406, 0.02723352671755725, 0.027247322033898305, 0.027754198473282442, 0.028142464000000002, 0.028485333333333338, 0.028898754098360655, 0.028874146341463416, 0.029381333333333336]
)
X.append([0.014973255474452558, 0.01503828148148148, 0.015170686131386862, 0.015259798561151078, 0.015556963503649636, 0.015606676258992806, 0.015761784172661872, 0.015860489208633092, 0.01610584172661871, 0.016180425531914896, 0.016504058394160585, 0.01661064748201439, 0.01675591489361702, 0.016946244604316547, 0.01713519424460432, 0.017321323741007196, 0.017549755395683455, 0.017845870503597126, 0.0169631654676259, 0.01591439175257732, 0.018116, 0.018609526717557254, 0.01946655319148936, 0.019880794326241135, 0.020370099290780142, 0.0207565390070922, 0.021145438848920867, 0.021454354609929074, 0.021874156028368796, 0.02225093525179856, 0.022721797101449275, 0.02310086153846154, 0.02345515789473684, 0.023822229007633592, 0.024172379562043798, 0.024446028985507247, 0.024794, 0.024980562962962964, 0.025332246153846154, 0.025737518248175186]
)
X.append([0.015121253731343282, 0.01514177777777778, 0.015708823529411765, 0.015631000000000003, 0.01574968888888889, 0.015793244444444448, 0.015921007407407407, 0.016170725925925927, 0.016318814814814814, 0.016522074074074074, 0.01670035294117647, 0.016903942446043162, 0.01702238848920863, 0.017181276595744685, 0.017431489361702128, 0.0175816170212766, 0.01780074820143885, 0.017969956834532376, 0.017205697841726618, 0.016633178947368422, 0.018652253164556962, 0.01944431205673759, 0.02008506474820144, 0.020486865248226953, 0.02079268085106383, 0.02119858156028369, 0.021618382978723403, 0.021999262411347517, 0.022366241134751774, 0.02287222695035461, 0.023221739130434783, 0.023403234042553192, 0.02375576811594203, 0.023808235294117647, 0.024672242424242426, 0.025123908396946563, 0.02536148837209302, 0.025631937984496127, 0.025748369230769234, 0.02595279389312977]
)
X.append([0.015578474820143885, 0.015699741007194245, 0.015831649635036495, 0.015913531914893617, 0.016029697841726618, 0.01607478014184397, 0.016097021276595742, 0.016213787234042553, 0.016302751773049646, 0.016505702127659574, 0.016680851063829785, 0.016881021276595742, 0.0170228085106383, 0.017217418439716314, 0.017378666666666667, 0.0176205390070922, 0.01779568794326241, 0.018626950354609928, 0.017242439716312057, 0.017260510638297873, 0.01935386046511628, 0.020786315789473684, 0.021391397849462365, 0.021860363636363636, 0.022565565217391306, 0.022834, 0.023009488372093025, 0.023426454545454545, 0.023933304347826086, 0.024308666666666666, 0.02459062365591398, 0.024933702127659572, 0.025674097087378642, 0.02600741818181818, 0.0259082962962963, 0.02672727272727273, 0.026924592592592594, 0.02777704672897196, 0.027095310344827584, 0.027502280373831775]
)
X.append([0.015288, 0.015420546762589929, 0.01562717730496454, 0.01582946762589928, 0.016091741007194245, 0.01610258156028369, 0.016289151079136692, 0.016320172661870504, 0.016572425531914896, 0.01676510144927536, 0.016980086330935253, 0.017233588235294115, 0.01748435294117647, 0.017799157894736843, 0.017924562962962964, 0.01811270588235294, 0.018389411764705883, 0.018184764705882355, 0.01747448888888889, 0.01798563440860215, 0.019072307692307694, 0.020083744680851064, 0.020617531914893617, 0.02108181560283688, 0.021621163120567374, 0.022177191489361703, 0.022552510638297874, 0.02297787234042553, 0.023435792592592593, 0.023848588235294118, 0.024446258064516127, 0.024762387096774193, 0.025222750000000002, 0.02571876363636364, 0.026158461538461537, 0.02619086567164179, 0.026415244094488192, 0.027125752066115703, 0.027080131147540983, 0.027697152000000003]
)
X.append([0.015831649635036495, 0.015743943262411346, 0.015988595744680853, 0.01612204255319149, 0.016338893617021278, 0.016358354609929078, 0.016605007194244605, 0.016619687943262414, 0.016894921985815603, 0.017104172661870504, 0.017287482014388487, 0.017356425531914896, 0.01765410071942446, 0.017946160583941606, 0.018125064748201438, 0.01848339393939394, 0.018936129032258064, 0.019046751773049646, 0.01813208510638298, 0.018167172413793103, 0.02071809090909091, 0.021241271028037384, 0.021715448275862068, 0.022357176470588234, 0.02289933333333333, 0.02323956923076923, 0.023628425531914896, 0.02424982113821138, 0.024606305084745764, 0.02490955223880597, 0.025264842105263162, 0.025583487999999998, 0.02615709090909091, 0.026093829457364343, 0.026557251908396952, 0.02643694117647059, 0.02688658823529412, 0.027252647058823527, 0.02760283076923077, 0.027986510948905113]
)
X.append([0.015615136690647482, 0.01557991489361702, 0.015654978723404257, 0.015918608695652176, 0.016041418439716314, 0.01614150354609929, 0.016269390070921985, 0.016388936170212767, 0.01659466666666667, 0.016814297872340428, 0.017025208633093526, 0.017195177304964542, 0.017496172661870507, 0.01758717730496454, 0.017831829787234042, 0.018006618705035973, 0.018957007194244604, 0.01781895652173913, 0.01696164539007092, 0.019758918918918917, 0.020050074074074074, 0.020973543307086614, 0.021236992000000003, 0.02186222900763359, 0.022083664122137404, 0.022685515151515154, 0.022879111111111114, 0.023434160583941606, 0.023717390070921985, 0.02410507462686567, 0.024401304964539006, 0.02478218439716312, 0.025104920863309354, 0.02551058156028369, 0.025877560283687946, 0.026278306569343067, 0.02652817391304348, 0.026813928057553962, 0.027246925373134327, 0.027313093525179858]
)
X.append([0.015185611940298507, 0.01540926618705036, 0.015536172661870504, 0.0156994609929078, 0.015977475177304964, 0.016197106382978728, 0.016472340425531914, 0.016689191489361703, 0.016944964539007092, 0.017134014184397164, 0.01736754609929078, 0.017576056737588653, 0.017870751773049646, 0.018123744680851064, 0.018390638297872342, 0.018585248226950356, 0.018875652173913043, 0.01951702189781022, 0.01857346762589928, 0.0185582962962963, 0.01954465882352941, 0.020660181818181817, 0.02150714606741573, 0.021947219512195124, 0.02302654117647059, 0.02344251162790698, 0.02385138144329897, 0.024073411764705885, 0.024304, 0.025105422222222225, 0.02519811235955056, 0.025192533333333333, 0.025833652173913046, 0.026175333333333335, 0.02632461855670103, 0.0265888, 0.026376, 0.026276, 0.026383999999999998, 0.026804427184466025]
)
#Abscisse temporelle du graphique
Z = []
for i in range(20, 60) :
    Z.append(convertion_s(i))  #fonction permettant de convertir les images en secondes


#Récupération de la valeur moyenne , la valeur maximale et la valeur minimale à chaque image
Y = []
M = []
for i in range(0, len(X[0])) :
    M.append([])

for k in range (0, len(X[0])) :
    m = 0
    s = 0
    for i in range(0, len(X)) :
        M[k].append(X[i][k])
        m+=X[i][k]
        s += 1
    Y.append(m/s)

Min = []
Max = []
for i in range(0, len(M)) :
    Min.append(min(M[i]))
    Max.append(max(M[i]))

#Tracé de la pente post-rechoc :
P1 = []
P2 = []
for i in range(21, 31) :
    P1.append(convertion_s(20+i))
    P2.append(Y[i])
print(P1, P2)

#Calcul des coefficients de régression linéaire
p1 = np.array(P1)
p2 = np.array(P2)
a, b = np.polyfit(p1, p2, 1)
print(f"Coefficients de la droite de régression : a = {a}, b = {b}")

#Création de la figure :
fig = plt.figure(figsize=(8, 6))

# Tracé de la modélisation de l'évolution de la ZMT post-rechoc
plt.plot([P1[0], P1[-1]], [a * P1[0] + b, a * P1[-1] + b], 'go-', label='Accélération post rechoc')

#Tracé des 3 nuages de points
# Tracé des deux lignes du rechoc
y_values = np.linspace(0.014, 0.028, 100)
x1_value = convertion_s(36)
x2_value = convertion_s(39)
plt.plot([x1_value, x1_value], [min(y_values), max(y_values)], color='red', linestyle='--', label='Début/Fin du rechoc')
plt.plot([x2_value, x2_value], [min(y_values), max(y_values)], color='red', linestyle='--')

# Tracé des nuages de points
plt.scatter(Z, Y, color='blue', label='LZMT en fct du t')

# Calcul de l'interpollation des courbes min et max
x_interpollation = np.linspace(min(Z), max(Z), 300)  # Points pour interpolation
spl_max = make_interp_spline(Z, Max, k=3)  # k=3 pour un spline cubique
spl_min = make_interp_spline(Z, Min, k=3)
y_max = spl_max(x_interpollation)
y_min = spl_min(x_interpollation)

# Tracer la courbe fluide
plt.plot(x_interpollation, y_max, color='black', label='Valeurs max/min')
plt.plot(x_interpollation, y_min, color='black')

#Colorer la zone "écart type"
plt.fill_between(x_interpollation, y_max, y_min, color='red', alpha=0.1)

# Titre et axes
plt.xlabel('Temps post-choc en s')
plt.ylabel('Largeur de la ZMT en m')
plt.title('Largeur de la ZMT en fonction du temps (10ms)')

# Afficher la légende
plt.legend()

plt.show()
